// <auto-generated/>

namespace SharpGen.Runtime.Win32
{
    [System.Runtime.InteropServices.GuidAttribute("0000000c-0000-0000-C000-000000000046")]
    public partial class ComStream : SharpGen.Runtime.Win32.ComStreamBase, SharpGen.Runtime.Win32.IStream
    {
        public ComStream(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator ComStream(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new ComStream(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "dlibMove">No documentation.</param>
        /// <param name = "dwOrigin">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IStream::Seek([In] LARGE_INTEGER dlibMove,[In] DWORD dwOrigin,[Out, Optional] ULARGE_INTEGER* plibNewPosition)</unmanaged>
        /// <unmanaged-short>IStream::Seek</unmanaged-short>
        public unsafe System.UInt64 Seek(System.Int64 dlibMove, System.IO.SeekOrigin dwOrigin)
        {
            System.UInt64 libNewPositionRef;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpGen.Runtime.COM.LocalInterop.CalliStdCallint(this._nativePointer, dlibMove, unchecked ((System.UInt32)dwOrigin), &libNewPositionRef, (*(void ***)this._nativePointer)[5]);
            __result__.CheckError();
            return libNewPositionRef;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "libNewSize">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IStream::SetSize([In] ULARGE_INTEGER libNewSize)</unmanaged>
        /// <unmanaged-short>IStream::SetSize</unmanaged-short>
        public unsafe void SetSize(System.UInt64 libNewSize)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpGen.Runtime.COM.LocalInterop.CalliStdCallint(this._nativePointer, libNewSize, (*(void ***)this._nativePointer)[6]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "stmRef">No documentation.</param>
        /// <param name = "cb">No documentation.</param>
        /// <param name = "cbWrittenRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IStream::CopyTo([In] IStream* pstm,[In] ULARGE_INTEGER cb,[Out] ULARGE_INTEGER* pcbRead,[Out] ULARGE_INTEGER* pcbWritten)</unmanaged>
        /// <unmanaged-short>IStream::CopyTo</unmanaged-short>
        public unsafe System.UInt64 CopyTo(SharpGen.Runtime.Win32.IStream stmRef, System.UInt64 cb, out System.UInt64 cbWrittenRef)
        {
            System.IntPtr stmRef_ = System.IntPtr.Zero;
            System.UInt64 cbReadRef;
            SharpGen.Runtime.Result __result__;
            stmRef_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.Win32.IStream>(stmRef);
            fixed (void *cbWrittenRef_ = &cbWrittenRef)
                __result__ = SharpGen.Runtime.COM.LocalInterop.CalliStdCallint(this._nativePointer, (void *)stmRef_, cb, &cbReadRef, cbWrittenRef_, (*(void ***)this._nativePointer)[7]);
            System.GC.KeepAlive(stmRef);
            __result__.CheckError();
            return cbReadRef;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "grfCommitFlags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IStream::Commit([In] DWORD grfCommitFlags)</unmanaged>
        /// <unmanaged-short>IStream::Commit</unmanaged-short>
        public unsafe void Commit(SharpGen.Runtime.Win32.CommitFlags grfCommitFlags)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpGen.Runtime.COM.LocalInterop.CalliStdCallint(this._nativePointer, unchecked ((System.Int32)grfCommitFlags), (*(void ***)this._nativePointer)[8]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IStream::Revert()</unmanaged>
        /// <unmanaged-short>IStream::Revert</unmanaged-short>
        public unsafe void Revert()
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpGen.Runtime.COM.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[9]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "libOffset">No documentation.</param>
        /// <param name = "cb">No documentation.</param>
        /// <param name = "dwLockType">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IStream::LockRegion([In] ULARGE_INTEGER libOffset,[In] ULARGE_INTEGER cb,[In] DWORD dwLockType)</unmanaged>
        /// <unmanaged-short>IStream::LockRegion</unmanaged-short>
        public unsafe void LockRegion(System.UInt64 libOffset, System.UInt64 cb, SharpGen.Runtime.Win32.LockType dwLockType)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpGen.Runtime.COM.LocalInterop.CalliStdCallint(this._nativePointer, libOffset, cb, unchecked ((System.Int32)dwLockType), (*(void ***)this._nativePointer)[10]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "libOffset">No documentation.</param>
        /// <param name = "cb">No documentation.</param>
        /// <param name = "dwLockType">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IStream::UnlockRegion([In] ULARGE_INTEGER libOffset,[In] ULARGE_INTEGER cb,[In] DWORD dwLockType)</unmanaged>
        /// <unmanaged-short>IStream::UnlockRegion</unmanaged-short>
        public unsafe void UnlockRegion(System.UInt64 libOffset, System.UInt64 cb, SharpGen.Runtime.Win32.LockType dwLockType)
        {
            SharpGen.Runtime.Result __result__;
            __result__ = SharpGen.Runtime.COM.LocalInterop.CalliStdCallint(this._nativePointer, libOffset, cb, unchecked ((System.Int32)dwLockType), (*(void ***)this._nativePointer)[11]);
            __result__.CheckError();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "grfStatFlag">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IStream::Stat([Out] STATSTG* pstatstg,[In] DWORD grfStatFlag)</unmanaged>
        /// <unmanaged-short>IStream::Stat</unmanaged-short>
        public unsafe SharpGen.Runtime.Win32.StorageStatistics GetStatistics(SharpGen.Runtime.Win32.StorageStatisticsFlags grfStatFlag)
        {
            SharpGen.Runtime.Win32.StorageStatistics statstgRef;
            SharpGen.Runtime.Win32.StorageStatistics.__Native statstgRef_ = default (SharpGen.Runtime.Win32.StorageStatistics.__Native);
            statstgRef = default (SharpGen.Runtime.Win32.StorageStatistics);
            SharpGen.Runtime.Result __result__;
            __result__ = SharpGen.Runtime.COM.LocalInterop.CalliStdCallint(this._nativePointer, &statstgRef_, unchecked ((System.Int32)grfStatFlag), (*(void ***)this._nativePointer)[12]);
            statstgRef.__MarshalFrom(ref statstgRef_);
            __result__.CheckError();
            return statstgRef;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT IStream::Clone([Out] IStream** ppstm)</unmanaged>
        /// <unmanaged-short>IStream::Clone</unmanaged-short>
        public unsafe SharpGen.Runtime.Win32.IStream Clone()
        {
            SharpGen.Runtime.Win32.IStream stmOut;
            System.IntPtr stmOut_ = System.IntPtr.Zero;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpGen.Runtime.COM.LocalInterop.CalliStdCallint(this._nativePointer, &stmOut_, (*(void ***)this._nativePointer)[13]);
            if (stmOut_ != System.IntPtr.Zero)
                stmOut = new SharpGen.Runtime.Win32.ComStream(stmOut_);
            else
                stmOut = null;
            __result__.CheckError();
            return stmOut;
        }
    }

    [System.Runtime.InteropServices.GuidAttribute("0c733a30-2a1c-11ce-ade5-00aa0044773d")]
    public partial class ComStreamBase : SharpGen.Runtime.ComObject, SharpGen.Runtime.Win32.IStreamBase
    {
        public ComStreamBase(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator ComStreamBase(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new ComStreamBase(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "vRef">No documentation.</param>
        /// <param name = "cb">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT ISequentialStream::Read([Out, Buffer] void* pv,[In] ULONG cb,[Out, Optional] ULONG* pcbRead)</unmanaged>
        /// <unmanaged-short>ISequentialStream::Read</unmanaged-short>
        public unsafe System.UInt32 Read(System.IntPtr vRef, System.UInt32 cb)
        {
            System.UInt32 cbReadRef;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpGen.Runtime.COM.LocalInterop.CalliStdCallint(this._nativePointer, (void *)vRef, cb, &cbReadRef, (*(void ***)this._nativePointer)[3]);
            __result__.CheckError();
            return cbReadRef;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "vRef">No documentation.</param>
        /// <param name = "cb">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT ISequentialStream::Write([In, Buffer] const void* pv,[In] ULONG cb,[Out, Optional] ULONG* pcbWritten)</unmanaged>
        /// <unmanaged-short>ISequentialStream::Write</unmanaged-short>
        public unsafe System.UInt32 Write(System.IntPtr vRef, System.UInt32 cb)
        {
            System.UInt32 cbWrittenRef;
            SharpGen.Runtime.Result __result__;
            __result__ = SharpGen.Runtime.COM.LocalInterop.CalliStdCallint(this._nativePointer, (void *)vRef, cb, &cbWrittenRef, (*(void ***)this._nativePointer)[4]);
            __result__.CheckError();
            return cbWrittenRef;
        }
    }

    class IStreamShadow : SharpGen.Runtime.Win32.IStreamBaseShadow
    {
        protected unsafe class IStreamVtbl : SharpGen.Runtime.Win32.IStreamBaseShadow.IStreamBaseVtbl
        {
            public IStreamVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 9)
            {
                AddMethod(new SeekDelegate(Seek));
                AddMethod(new SetSizeDelegate(SetSize));
                AddMethod(new CopyToDelegate(CopyTo));
                AddMethod(new CommitDelegate(Commit));
                AddMethod(new RevertDelegate(Revert));
                AddMethod(new LockRegionDelegate(LockRegion));
                AddMethod(new UnlockRegionDelegate(UnlockRegion));
                AddMethod(new GetStatisticsDelegate(GetStatistics));
                AddMethod(new CloneDelegate(Clone));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.StdCall)]
            private delegate int SeekDelegate(System.IntPtr thisObject, long arg0, System.UInt32 arg1, void *arg2);
            private static unsafe int Seek(System.IntPtr thisObject, long param0, System.UInt32 param1, void *param2)
            {
                try
                {
                    System.Int64 dlibMove = default (System.Int64);
                    dlibMove = (System.Int64)param0;
                    System.IO.SeekOrigin dwOrigin = default (System.IO.SeekOrigin);
                    dwOrigin = (System.IO.SeekOrigin)param1;
                    ref System.UInt64 libNewPositionRef = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt64>(param2);
                    IStream @this = (IStream)ToShadow<SharpGen.Runtime.Win32.IStreamShadow>(thisObject).Callback;
                    libNewPositionRef = @this.Seek(dlibMove, dwOrigin);
                    return SharpGen.Runtime.Result.Ok.Code;
                }
                catch (System.Exception __exception__)
                {
                    return SharpGen.Runtime.Result.GetResultFromException(__exception__).Code;
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.StdCall)]
            private delegate int SetSizeDelegate(System.IntPtr thisObject, System.UInt64 arg0);
            private static unsafe int SetSize(System.IntPtr thisObject, System.UInt64 param0)
            {
                try
                {
                    System.UInt64 libNewSize = default (System.UInt64);
                    libNewSize = (System.UInt64)param0;
                    IStream @this = (IStream)ToShadow<SharpGen.Runtime.Win32.IStreamShadow>(thisObject).Callback;
                    @this.SetSize(libNewSize);
                    return SharpGen.Runtime.Result.Ok.Code;
                }
                catch (System.Exception __exception__)
                {
                    return SharpGen.Runtime.Result.GetResultFromException(__exception__).Code;
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.StdCall)]
            private delegate int CopyToDelegate(System.IntPtr thisObject, void *arg0, System.UInt64 arg1, void *arg2, void *arg3);
            private static unsafe int CopyTo(System.IntPtr thisObject, void *param0, System.UInt64 param1, void *param2, void *param3)
            {
                try
                {
                    SharpGen.Runtime.Win32.IStream stmRef = default (SharpGen.Runtime.Win32.IStream);
                    System.IntPtr stmRef_ = (System.IntPtr)param0;
                    System.UInt64 cb = default (System.UInt64);
                    cb = (System.UInt64)param1;
                    ref System.UInt64 cbReadRef = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt64>(param2);
                    ref System.UInt64 cbWrittenRef = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt64>(param3);
                    IStream @this = (IStream)ToShadow<SharpGen.Runtime.Win32.IStreamShadow>(thisObject).Callback;
                    if (stmRef_ != System.IntPtr.Zero)
                        stmRef = new SharpGen.Runtime.Win32.ComStream(stmRef_);
                    else
                        stmRef = null;
                    cbReadRef = @this.CopyTo(stmRef, cb, out cbWrittenRef);
                    return SharpGen.Runtime.Result.Ok.Code;
                }
                catch (System.Exception __exception__)
                {
                    return SharpGen.Runtime.Result.GetResultFromException(__exception__).Code;
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.StdCall)]
            private delegate int CommitDelegate(System.IntPtr thisObject, int arg0);
            private static unsafe int Commit(System.IntPtr thisObject, int param0)
            {
                try
                {
                    SharpGen.Runtime.Win32.CommitFlags grfCommitFlags = default (SharpGen.Runtime.Win32.CommitFlags);
                    grfCommitFlags = (SharpGen.Runtime.Win32.CommitFlags)param0;
                    IStream @this = (IStream)ToShadow<SharpGen.Runtime.Win32.IStreamShadow>(thisObject).Callback;
                    @this.Commit(grfCommitFlags);
                    return SharpGen.Runtime.Result.Ok.Code;
                }
                catch (System.Exception __exception__)
                {
                    return SharpGen.Runtime.Result.GetResultFromException(__exception__).Code;
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.StdCall)]
            private delegate int RevertDelegate(System.IntPtr thisObject);
            private static unsafe int Revert(System.IntPtr thisObject)
            {
                try
                {
                    IStream @this = (IStream)ToShadow<SharpGen.Runtime.Win32.IStreamShadow>(thisObject).Callback;
                    @this.Revert();
                    return SharpGen.Runtime.Result.Ok.Code;
                }
                catch (System.Exception __exception__)
                {
                    return SharpGen.Runtime.Result.GetResultFromException(__exception__).Code;
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.StdCall)]
            private delegate int LockRegionDelegate(System.IntPtr thisObject, System.UInt64 arg0, System.UInt64 arg1, int arg2);
            private static unsafe int LockRegion(System.IntPtr thisObject, System.UInt64 param0, System.UInt64 param1, int param2)
            {
                try
                {
                    System.UInt64 libOffset = default (System.UInt64);
                    libOffset = (System.UInt64)param0;
                    System.UInt64 cb = default (System.UInt64);
                    cb = (System.UInt64)param1;
                    SharpGen.Runtime.Win32.LockType dwLockType = default (SharpGen.Runtime.Win32.LockType);
                    dwLockType = (SharpGen.Runtime.Win32.LockType)param2;
                    IStream @this = (IStream)ToShadow<SharpGen.Runtime.Win32.IStreamShadow>(thisObject).Callback;
                    @this.LockRegion(libOffset, cb, dwLockType);
                    return SharpGen.Runtime.Result.Ok.Code;
                }
                catch (System.Exception __exception__)
                {
                    return SharpGen.Runtime.Result.GetResultFromException(__exception__).Code;
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.StdCall)]
            private delegate int UnlockRegionDelegate(System.IntPtr thisObject, System.UInt64 arg0, System.UInt64 arg1, int arg2);
            private static unsafe int UnlockRegion(System.IntPtr thisObject, System.UInt64 param0, System.UInt64 param1, int param2)
            {
                try
                {
                    System.UInt64 libOffset = default (System.UInt64);
                    libOffset = (System.UInt64)param0;
                    System.UInt64 cb = default (System.UInt64);
                    cb = (System.UInt64)param1;
                    SharpGen.Runtime.Win32.LockType dwLockType = default (SharpGen.Runtime.Win32.LockType);
                    dwLockType = (SharpGen.Runtime.Win32.LockType)param2;
                    IStream @this = (IStream)ToShadow<SharpGen.Runtime.Win32.IStreamShadow>(thisObject).Callback;
                    @this.UnlockRegion(libOffset, cb, dwLockType);
                    return SharpGen.Runtime.Result.Ok.Code;
                }
                catch (System.Exception __exception__)
                {
                    return SharpGen.Runtime.Result.GetResultFromException(__exception__).Code;
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.StdCall)]
            private delegate int GetStatisticsDelegate(System.IntPtr thisObject, void *arg0, int arg1);
            private static unsafe int GetStatistics(System.IntPtr thisObject, void *param0, int param1)
            {
                try
                {
                    ref SharpGen.Runtime.Win32.StorageStatistics.__Native statstgRef_ = ref System.Runtime.CompilerServices.Unsafe.AsRef<SharpGen.Runtime.Win32.StorageStatistics.__Native>(param0);
                    SharpGen.Runtime.Win32.StorageStatistics statstgRef;
                    SharpGen.Runtime.Win32.StorageStatisticsFlags grfStatFlag = default (SharpGen.Runtime.Win32.StorageStatisticsFlags);
                    grfStatFlag = (SharpGen.Runtime.Win32.StorageStatisticsFlags)param1;
                    IStream @this = (IStream)ToShadow<SharpGen.Runtime.Win32.IStreamShadow>(thisObject).Callback;
                    statstgRef = @this.GetStatistics(grfStatFlag);
                    statstgRef.__MarshalTo(ref statstgRef_);
                    return SharpGen.Runtime.Result.Ok.Code;
                }
                catch (System.Exception __exception__)
                {
                    return SharpGen.Runtime.Result.GetResultFromException(__exception__).Code;
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.StdCall)]
            private delegate int CloneDelegate(System.IntPtr thisObject, void *arg0);
            private static unsafe int Clone(System.IntPtr thisObject, void *param0)
            {
                try
                {
                    ref System.IntPtr stmOut_ = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.IntPtr>(param0);
                    SharpGen.Runtime.Win32.IStream stmOut;
                    IStream @this = (IStream)ToShadow<SharpGen.Runtime.Win32.IStreamShadow>(thisObject).Callback;
                    stmOut = @this.Clone();
                    stmOut_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SharpGen.Runtime.Win32.IStream>(stmOut);
                    return SharpGen.Runtime.Result.Ok.Code;
                }
                catch (System.Exception __exception__)
                {
                    return SharpGen.Runtime.Result.GetResultFromException(__exception__).Code;
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SharpGen.Runtime.Win32.IStreamShadow.IStreamVtbl(0);
    }

    [System.Runtime.InteropServices.GuidAttribute("0000000c-0000-0000-C000-000000000046"), SharpGen.Runtime.ShadowAttribute(typeof (SharpGen.Runtime.Win32.IStreamShadow))]
    public partial interface IStream : SharpGen.Runtime.Win32.IStreamBase
    {
        System.UInt64 Seek(System.Int64 dlibMove, System.IO.SeekOrigin dwOrigin);
        void SetSize(System.UInt64 libNewSize);
        System.UInt64 CopyTo(SharpGen.Runtime.Win32.IStream stmRef, System.UInt64 cb, out System.UInt64 cbWrittenRef);
        void Commit(SharpGen.Runtime.Win32.CommitFlags grfCommitFlags);
        void Revert();
        void LockRegion(System.UInt64 libOffset, System.UInt64 cb, SharpGen.Runtime.Win32.LockType dwLockType);
        void UnlockRegion(System.UInt64 libOffset, System.UInt64 cb, SharpGen.Runtime.Win32.LockType dwLockType);
        SharpGen.Runtime.Win32.StorageStatistics GetStatistics(SharpGen.Runtime.Win32.StorageStatisticsFlags grfStatFlag);
        SharpGen.Runtime.Win32.IStream Clone();
    }

    class IStreamBaseShadow : SharpGen.Runtime.ComObjectShadow
    {
        protected unsafe class IStreamBaseVtbl : SharpGen.Runtime.ComObjectShadow.ComObjectVtbl
        {
            public IStreamBaseVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 2)
            {
                AddMethod(new ReadDelegate(Read));
                AddMethod(new WriteDelegate(Write));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.StdCall)]
            private delegate int ReadDelegate(System.IntPtr thisObject, void *arg0, System.UInt32 arg1, void *arg2);
            private static unsafe int Read(System.IntPtr thisObject, void *param0, System.UInt32 param1, void *param2)
            {
                try
                {
                    System.IntPtr vRef = default (System.IntPtr);
                    vRef = (System.IntPtr)param0;
                    System.UInt32 cb = default (System.UInt32);
                    cb = (System.UInt32)param1;
                    ref System.UInt32 cbReadRef = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt32>(param2);
                    IStreamBase @this = (IStreamBase)ToShadow<SharpGen.Runtime.Win32.IStreamBaseShadow>(thisObject).Callback;
                    cbReadRef = @this.Read(vRef, cb);
                    return SharpGen.Runtime.Result.Ok.Code;
                }
                catch (System.Exception __exception__)
                {
                    return SharpGen.Runtime.Result.GetResultFromException(__exception__).Code;
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.StdCall)]
            private delegate int WriteDelegate(System.IntPtr thisObject, void *arg0, System.UInt32 arg1, void *arg2);
            private static unsafe int Write(System.IntPtr thisObject, void *param0, System.UInt32 param1, void *param2)
            {
                try
                {
                    System.IntPtr vRef = default (System.IntPtr);
                    vRef = (System.IntPtr)param0;
                    System.UInt32 cb = default (System.UInt32);
                    cb = (System.UInt32)param1;
                    ref System.UInt32 cbWrittenRef = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt32>(param2);
                    IStreamBase @this = (IStreamBase)ToShadow<SharpGen.Runtime.Win32.IStreamBaseShadow>(thisObject).Callback;
                    cbWrittenRef = @this.Write(vRef, cb);
                    return SharpGen.Runtime.Result.Ok.Code;
                }
                catch (System.Exception __exception__)
                {
                    return SharpGen.Runtime.Result.GetResultFromException(__exception__).Code;
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SharpGen.Runtime.Win32.IStreamBaseShadow.IStreamBaseVtbl(0);
    }

    [System.Runtime.InteropServices.GuidAttribute("0c733a30-2a1c-11ce-ade5-00aa0044773d"), SharpGen.Runtime.ShadowAttribute(typeof (SharpGen.Runtime.Win32.IStreamBaseShadow))]
    public partial interface IStreamBase : SharpGen.Runtime.IUnknown
    {
        System.UInt32 Read(System.IntPtr vRef, System.UInt32 cb);
        System.UInt32 Write(System.IntPtr vRef, System.UInt32 cb);
    }
}